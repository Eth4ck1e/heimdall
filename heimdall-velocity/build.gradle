plugins {
    id 'java'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow'
}

repositories {
    mavenCentral()

    maven { // on kotlin dsl use `maven("https://m2.dv8tion.net/releases")` instead
        url "https://m2.dv8tion.net/releases"
    }
    maven {
        name = 'velocitypowered-repo'
        url = 'https://nexus.velocitypowered.com/repository/maven-public/'
    }
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven { url "https://m2.chew.pro/snapshots" }
}

dependencies {
    api project(':heimdall-common')
    compileOnly 'com.velocitypowered:velocity-api:3.1.0'
    annotationProcessor 'com.velocitypowered:velocity-api:3.1.0'
    implementation("net.dv8tion:JDA:5.0.0-alpha.10")
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.30'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.4'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.29'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'pw.chew:jda-chewtils:2.0-SNAPSHOT'
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

rootProject.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)

tasks.build.dependsOn tasks.shadowJar
shadowJar {
    archiveClassifier.set(null)
}

